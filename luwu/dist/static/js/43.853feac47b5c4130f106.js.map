{"version":3,"sources":["webpack:///./node_modules/_monaco-editor@0.20.0@monaco-editor/esm/vs/basic-languages/lua/lua.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","conf","language","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","keywords","token","operators","symbols","escapes","tokenizer","root","cases","@keywords","@default","include","@operators","whitespace","comment","$1==$S2","next","string","$#==$S2"],"mappings":"qDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAAAC,EAAAC,EAAAH,EAAA,yBAAAI,IAAAF,EAAAC,EAAAH,EAAA,6BAAAK,IAKO,IAAAD,GACPE,UACAC,YAAA,KACAC,cAAA,cAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,OACAC,UACA,mCACA,2CACA,8BACA,wCACA,SAEAP,WACSQ,MAAA,oBAAAN,KAAA,IAAqCC,MAAA,MACrCK,MAAA,kBAAAN,KAAA,IAAAC,MAAA,MACAK,MAAA,wBAAAN,KAAA,IAAAC,MAAA,MAETM,WACA,4DACA,IAAU,wBAGVC,QAAA,wBACAC,QAAA,wEAEAC,WACAC,OAEA,gBACAC,OACAC,aAAsCP,MAAA,cACtCQ,WAAA,iBAIaC,QAAA,gBAEb,8EACA,uCAAgB,uCAEhB,aAAiB,cACjB,YACAH,OACAI,aAAA,YACAF,WAAA,OAIA,4CACA,+CACA,kBAEA,QAAgB,cAEhB,qCACA,qCACA,2BACA,2BAEAG,aACA,kBACA,yCACA,oBAEAC,UACA,qBACA,cACAN,OACAO,WAAoCb,MAAA,UAAAc,KAAA,QACpCN,WAAA,cAGA,gBAEAO,SACA,sBACA,6BACA,gCACA,QACAT,OACAU,WAAoChB,MAAA,SAAAc,KAAA,QACpCN,WAAA","file":"static/js/43.853feac47b5c4130f106.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '--',\r\n        blockComment: ['--[[', ']]'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.lua',\r\n    keywords: [\r\n        'and', 'break', 'do', 'else', 'elseif',\r\n        'end', 'false', 'for', 'function', 'goto', 'if',\r\n        'in', 'local', 'nil', 'not', 'or',\r\n        'repeat', 'return', 'then', 'true', 'until',\r\n        'while'\r\n    ],\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    operators: [\r\n        '+', '-', '*', '/', '%', '^', '#', '==', '~=', '<=', '>=', '<', '>', '=',\r\n        ';', ':', ',', '.', '..', '...'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // keys\r\n            [/(,)(\\s*)([a-zA-Z_]\\w*)(\\s*)(:)(?!:)/, ['delimiter', '', 'key', '', 'delimiter']],\r\n            [/({)(\\s*)([a-zA-Z_]\\w*)(\\s*)(:)(?!:)/, ['@brackets', '', 'key', '', 'delimiter']],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings: recover on non-terminated strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/--\\[([=]*)\\[/, 'comment', '@comment.$1'],\r\n            [/--.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\]]+/, 'comment'],\r\n            [/\\]([=]*)\\]/, {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'comment', next: '@pop' },\r\n                        '@default': 'comment'\r\n                    }\r\n                }],\r\n            [/./, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }]\r\n        ],\r\n    },\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_monaco-editor@0.20.0@monaco-editor/esm/vs/basic-languages/lua/lua.js\n// module id = Q0gI\n// module chunks = 43"],"sourceRoot":""}